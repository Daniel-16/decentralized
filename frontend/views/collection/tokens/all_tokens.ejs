<%- include('../../partials/header') %>
<style>
    /* Modal styles */
.modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgba(0, 0, 0, 0.5); /* Black with opacity */
}

/* Modal Content Box */
.modal-content {
    background-color: #fefefe;
    margin: 10% auto; /* Centered with less top margin */
    padding: 20px;
    border-radius: 8px; /* Rounded corners */
    border: 1px solid #888;
    width: 50%; /* Reduced width */
    max-width: 400px; /* Maximum width for the modal */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Light shadow */
}

/* Close Button */
.close-button {
    color: #aaa;
    float: right;
    font-size: 24px;
    font-weight: bold;
}

.close-button:hover,
.close-button:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}

/* Form styles */
#transferForm {
    display: flex;
    flex-direction: column; /* Stack items vertically */
}

#transferForm label {
    margin-bottom: 5px; /* Space between label and input */
    font-weight: bold; /* Make labels bold */
}

#transferForm input {
    margin-bottom: 15px; /* Space between inputs */
    padding: 8px; /* Padding for input fields */
    font-size: 16px; /* Larger font size */
    border: 1px solid #ccc; /* Border for input fields */
    border-radius: 4px; /* Rounded corners for inputs */
}

#transferForm button {
    padding: 10px;
    font-size: 16px;
    background-color: #d9534f; /* Button color */
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

#transferForm button:hover {
    background-color: #c9302c; /* Darker button color on hover */
}
</style>
<div class="top-area">
    <div class="grid_frame">
        <div class="container_grid clearfix">
            <div class="grid_12">
                <h2 class="page-title">My Tokens</h2>
            </div>
        </div>
    </div>
</div>

<div id="sys_mod_filter" class="mod-filter">
    <div class="grid_frame">
        <div class="container_grid clearfix">
            <div class="grid_12">
                <div class="lbl-search">
                    <input class="txt-search" id="sys_txt_search" type="search" placeholder="Search"/>
                    <input type="submit" class="btn-search" value=""/>
                </div>
                <div class="select-cate">
                    <div id="sys_selected_val" class="show-val">
                        <span data-cate-id="0">All Collections</span>
                        <i class="pick-down"></i>
                    </div>
                    <div id="sys_list_dd_cate" class="dropdown-cate">
                        <div class="first-lbl">All Collections</div>
                        <div class="wrap-list-cate clearfix">
                            <a href="#" data-cate-id="1">XXXX</a>
                        </div>
                    </div>
                </div><!--end: .select-cate -->

                <input id="create_collection_href" class="btn btn-red type-1 btn-apply-filter" type="button" value="Create Token" data-url="/collection/create">                    
            </div>
        </div>
    </div>
</div><!--end: .mod-filter -->

<div class="grid_frame page-content" style="padding-top: 30px;">
    <div class="container_grid">
        <div class="block-content list-coupon clearfix">
                <div class="tab-content">
                    
                    <div class="tab-content-item clearfix">
                        <div id="tokens-list" class="grid_8">
                            <!-- show tokens dynamically -->
                        </div>


                        <!-- pagination -->
                        <!-- <div class="grid_12">
                            <div class="pagination">
                                <a class="txt-nav" href="#">Newer post</a>
                                <a class="page-num active" href="#">1</a>
                                <a class="page-num" href="#">2</a>
                                <a class="page-num" href="#">3</a>
                                <a class="page-num" href="#">4</a>
                                <a class="page-num" href="#">5</a>
                                <a class="txt-nav" href="#">Older post</a>
                            </div>
                        </div> -->
                    </div>
                    <!--end: tab Coupon codes-->
                    
                </div>
            </div>
    </div>
</div>

<!-- modal for transfer -->
<div id="transferModal" class="modal">
    <div class="modal-content">
        <span class="close-button">&times;</span>
        <h2>Transfer Token</h2>
        <form id="transferForm">
            <label for="mnemonic">Mnemonic:</label>
            <!-- <input type="text" id="mnemonic" name="mnemonic" required> -->
            <textarea id="mnemonic" name="mnemonic" required></textarea>

            <label for="collectionId">Collection ID:</label>
            <input type="text" id="collectionId" name="collectionId" required>

            <label for="tokenId">Token ID:</label>
            <input type="text" id="tokenId" name="tokenId" required>

            <label for="recipient">Recipient Address:</label>
            <input type="text" id="recipient" name="recipient" required>

            <button type="submit" class="btn btn-red type-1">Submit Transfer</button>
        </form>
    </div>
</div>
<!-- end:modal for transfer -->

<%- include('../../partials/footer') %>

<!-- fetch user collection and update the HTML -->
<script>
$(document).ready(function() {
    function fetchUserCollections() {
        const token = localStorage.getItem('token');
        $.ajax({
            url: '/api/getCollections',  
            type: 'GET',
            headers: {
                'Authorization': 'Bearer ' + token  
            },
            success: function(response) {
                $('#tokens-list').empty(); // remove existing content
                
                if (response.success && response.collections && response.collections.length > 0) {
                    response.collections.forEach(function(collection) {
                        const tokenInfo = collection.token.length > 0 ? collection.token.join(", ") : "No tokens available";
                        const tokenItem = `
                            <div class="coupons-code-item view-code flex grid_6">
                                
                                <div class="right-content flex-body">
                                    <p class="rs save-price"><a href="#">Token ID: ${collection.tokenId}</a> <i class="icon iI"></i></p>
                                    <div class="bottom-action clearfix">
                                        <span class="codes">Collection ID: ${collection.collectionId}</span>
                                        <a class="btn-discard" href="#" 
                                            data-token-id="${collection.tokenId}" 
                                            data-collection-id="${collection.collectionId}">
                                            Transfer
                                        </a>
                                    </div>
                                </div>
                            </div>
                        `;
                        $('#tokens-list').append(tokenItem);

                         // Attach click event handler for transfer buttons
                        $('.btn-discard').on('click', function(e) {
                            e.preventDefault();
                            // Get token ID and collection ID from data attributes
                            const tokenId = $(this).data('token-id');
                            const collectionId = $(this).data('collection-id');
                            // Pre-populate the modal form fields
                            $('#tokenId').val(tokenId);
                            $('#collectionId').val(collectionId);
                            // Show the modal
                            $('#transferModal').fadeIn();
                        });
                    });
                } else if (response.message == 'No collections created for this user.') {
                    $('#tokens-list').append('<h1>No collections created for this user.</h1>');
                } else {
                    $('#tokens-list').append('<h1>No collections available.</h1>');
                }
            },
            error: function(xhr) {
                console.error('An error occurred:', xhr.responseText);
                $('#tokens-list').append('<p>Failed to fetch collections. Please try again later.</p>');
            }
        });
    }

    // Fetch user collections on page load
    fetchUserCollections();

    // Close the modal when the close button is clicked
    $('.close-button').on('click', function() {
        $('#transferModal').fadeOut();
    });

    // Close the modal when clicking outside of it
    $(window).on('click', function(event) {
        if (event.target === $('#transferModal')[0]) {
            $('#transferModal').fadeOut();
        }
    });
});
</script>



<!-- handle button on-click -->
<script>
$(document).ready(function() {
    $('#create_collection_href').on('click', function() {
        var url = '/collection/create';
        
        location.assign(url);
    });
});
</script>
<!-- end: handle button on-click -->


<!-- modal; -->
<script>
$(document).ready(function() {
    $('#transferForm').on('submit', function(e) {
        e.preventDefault(); 
        $('#cover-spin').show(0);
        
        const formData = {
            mnemonic: $('#mnemonic').val(),
            collectionId: $('#collectionId').val(),
            tokenId: $('#tokenId').val(),
            toAddress: $('#recipient').val()
        };

        const token = localStorage.getItem('token');

        $.ajax({
            url: '/api/transferToken', 
            type: 'POST',
            data: JSON.stringify(formData),
            contentType: 'application/json',
            headers: {
                Authorization: `Bearer ${token}`,
            },
            success: function(response) {
                if (response.success) {
                    $('#cover-spin').hide(0);
                    Swal.fire({
                        position: "center",
                        icon: "success",
                        title: "Token transferred successfully!",
                        showConfirmButton: false,
                        timer: 1500,
                    });
                    console.log(response.message)
                    // alert('Token transferred successfully!');
                    $('#transferModal').fadeOut(); 
                    // location.reload();
                } else {
                    $('#cover-spin').hide(0);
                    Swal.fire({
                        position: "center",
                        icon: "success",
                        title: "An error occurred!",
                        showConfirmButton: false,
                        timer: 1500,
                    });
                    console.error('Failed to transfer token:', response.message);
                    // alert('Failed to transfer token: ' + response.message);
                }

            },
            error: function(xhr) {
                $('#cover-spin').hide(0);
                alert('An error occurred: ' + xhr.responseText);
            }
        });
    });
});
</script>