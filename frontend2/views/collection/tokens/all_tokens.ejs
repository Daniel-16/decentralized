<%- include('../../partials/admin/header') %>






<div class="admin-wrapper">
    <div class="container">


        <h3 class="mb-3">All My Coupons</h3>
        <div class="row g-4" id="collections-container">
        <!-- <div class="row g-4"> -->
            
                


        </div>
    </div>
</div>



<!-- modal for swap Token -->
<div class="modal fade" id="transferModal" tabindex="-1" aria-labelledby="transferModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="transferModalLabel">Swap Token with another UNQ wallet beneficiary.</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="transferForm">

                    <div class="mb-3">
                        <label for="collectionId" class="form-label">Collection ID:</label>
                        <input type="text" id="collectionId" class="form-control" readonly name="collectionId" required>
                    </div>

                    <div class="mb-3">
                        <label for="tokenId" class="form-label">Token ID:</label>
                        <input type="text" id="tokenId" class="form-control" readonly name="tokenId" required>
                    </div>

                    <hr>
                    <h4 class="text-dark">Recipient Details</h4>
                    <div class="mb-3">
                        <label for="desiredTokenId" class="form-label">Destination Token ID :</label>
                        <input type="text" id="desiredTokenId" class="form-control" name="desiredTokenId" required>
                    </div>

                    <div class="mb-3">
                        <label for="desiredCollectionId" class="form-label">Destination Collection ID :</label>
                        <input type="text" id="desiredCollectionId" class="form-control" name="desiredCollectionId" required>
                    </div>
                    
                    <div class="mb-3">
                        <label for="recipientAddress" class="form-label">Destination Wallet Address:</label>
                        <input type="text" id="recipientAddress" class="form-control" name="recipientAddress" required>
                    </div>

                    <button id="submitTransferButton" type="submit" onclick="return confirm('Are you sure you want to proceed with this swap initiation?')" class="btn btn-danger w-100">Initiate Swap</button>
                    <button id="pleaseWaitButton"  type="submit" class="btn btn-danger w-100" disabled style="display:none;">Please Wait...</button>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- end:modal for transfer -->


<!-- modal for accept Token -->
<div class="modal fade" id="acceptCouponModal" tabindex="-1" aria-labelledby="acceptCouponModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="acceptCouponModalLabel">Swap Token with another UNQ wallet beneficiary.</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="completeSwapForm">


                    <div class="mb-3">
                        <label for="swapOfferId" class="form-label">Coupon Swap Offer ID:</label>
                        <input type="text" id="swapOfferId" class="form-control" name="swapOfferId" required>
                    </div>

                    
                    

                    <button id="submitAcceptButton" type="submit" onclick="return confirm('Are you sure you want to proceed with this swap?')" class="btn btn-danger w-100">Complete Swap</button>
                    <button id="kindlyWaitButton"  type="submit" class="btn btn-danger w-100" disabled style="display:none;">Please Wait...</button>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- end:modal for transfer -->




<!-- get collections -->
<script>
$(document).ready(function() {
    function fetchUserCollections() {
        const token = localStorage.getItem('token');
        $.ajax({
            url: '/api/getUserToken',  
            type: 'GET',
            headers: {
                'Authorization': 'Bearer ' + token
            },
            success: function(response) {
                $('#collections-container').empty();  
                if (response && response.success) {
                    console.log('Response:', response);
                    const { standardTokens, specialTokens, itemTokens } = response.allTokens;
                    
                    // Handle Standard Tokens
                    if (standardTokens && standardTokens.length > 0) {
                        standardTokens.forEach(function(token) {
                            let collectionItem = createCollectionItem(token, 'standard');
                            $('#collections-container').append(collectionItem);
                        });
                    } else {
                        $('#collections-container').append('<p>No standard tokens created for this user.</p>');
                    }

                    // Handle Special Tokens
                    if (specialTokens && specialTokens.length > 0) {
                        specialTokens.forEach(function(token) {
                            let collectionItem = createCollectionItem(token, 'special');
                            $('#collections-container').append(collectionItem);
                        });
                    } else {
                        $('#collections-container').append('<p>No special tokens created for this user.</p>');
                    }
                    
                    // Handle Item Tokens
                    if (itemTokens && itemTokens.length > 0) {
                        itemTokens.forEach(function(token) {
                            let collectionItem = createCollectionItem(token, 'item');
                            $('#collections-container').append(collectionItem);
                        });
                    } else {
                        $('#collections-container').append('<p>No Item tokens created for this user.</p>');
                    }

                    // Attach click event handler for mint buttons
                    attachMintButtonHandler();

                } else {
                    $('#collections-container').append('<p>Error fetching collections.</p>');
                }
            },
            error: function(xhr) {
                console.error('An error occurred:', xhr.responseText);
                $('#collections-container').append('<p>Failed to fetch collections. Please try again later.</p>');
            }
        });
    }

    function createCollectionItem(token, tokenType) {
        const couponUrl = tokenType == "standard" ? `/getCoupon/${token.collectionId}/${token.tokenId}` : '#';
        // const swapBtn = tokenType == "standard" ? `
        const swapBtn = (tokenType == "item" || tokenType == "standard") ? `
            <div class="col-6">
                <a class="btn btn-primary rounded-pill btn-sm mt-3 w-100" href="/initiate-coupon-swap?cid=${token.collectionId}&tid=${token.tokenId}">
                    Swap                          
                </a>
            </div>
        ` : '';
                
        // const tokenStatus = !token.isPurchased ? 'In Marketplace' : 'Redeemable';
        // const tokenClass = tokenType === 'special' ? 'badge bg-warning' : 'badge bg-dark';
        let tokenClass = '';

        switch (tokenType) {
            case 'special':
                tokenClass = 'badge bg-warning'
                break;
            case 'item':
                tokenClass = 'badge bg-primary'
                break;
        
            default:
                tokenClass = 'badge bg-dark'
                break;
        }
        
        
        let tokenStatus = '';

        if (!token.isPurchased && tokenType === 'standard') {
            tokenStatus = 'In Marketplace';
        } else if(!token.isPurchased && tokenType === 'item'){
            tokenStatus = 'In Store';
        } else if(!token.isPurchased && tokenType === 'special'){
            tokenStatus = 'Redeemable';
        } else if(token.isPurchased){
            tokenStatus = 'Redeemable';
        }
        

        // console.log("token: ", token)

        return `
        <div class="col-12 col-sm-6 col-xl-4 col-xxl-4">
            <div class="nft-card card border-0">
                <div class="card-body">
                    <div class="img-wrap">
                        <img style="height: 200px; width: auto; object-fit: cover;" src="${token.tokenImageUrl}" alt="${token.tokenName}">                                
                        <div class="${tokenClass} position-absolute text-center">
                            ${tokenType}
                        </div>
                    </div>
                    <div class="row gx-2 align-items-center mt-3">
                        <div class="col-12">
                            <span class="d-block fz-12"><i class="bi bi-bag me-1"></i>${tokenStatus}</span>
                        </div>
                    </div>
                    <div class="row gx-2 align-items-center mt-2">
                        <div class="col-7">
                            <div class="name-info d-flex align-items-center">
                                <div class="author-img position-relative">
                                    <img class="shadow" src="/assets/img/bg-img/u2.jpg" alt="">
                                    <i class="bi bi-check position-absolute bg-success"></i>
                                </div>
                                <div class="name-author">
                                    <a class="name d-block hover-primary fw-bold text-truncate" href="${couponUrl}" data-bs-toggle="tooltip" data-bs-placement="top" title="${token.tokenName}">
                                        ${token.tokenName}
                                    </a>
                                    <a class="author d-block fz-12 hover-primary text-truncate" href="#">
                                        #${token.tokenId}-${token.collectionId}
                                    </a>
                                </div>
                            </div>
                        </div>
                        <div class="col-5">
                            <div class="price text-end">
                                <span class="fz-12 d-block">Current Price</span>
                                <h6 class="mb-0">UNQ ${new Intl.NumberFormat('en-US', { 
                                    minimumFractionDigits: 2, 
                                    maximumFractionDigits: 2 
                                }).format(token.priceOfCoupon)}</h6>
                            </div>
                        </div>
                        <div class="row">
                            ${swapBtn}
                            <div class="col-6">
                                <a class="btn btn-danger rounded-pill btn-sm mt-3 w-100 redeem-coupon" href="#"  
                                    data-token-id="${token.tokenId}" 
                                    data-collection-id="${token.collectionId}">
                                    Redeem                                    
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        `;
    }

// / Function to attach mint button event handlers
    function attachMintButtonHandler() {
        $('.btn-mint-token').on('click', function(e) {
            e.preventDefault();
            // Get token ID and collection ID from data attributes
            const tokenId = $(this).data('token-id');
            const collectionId = $(this).data('collection-id');
            // Pre-populate the modal form fields
            $('#tokenId').val(tokenId);
            $('#collectionId').val(collectionId);
            // Show the modal for token transfer/minting
            $('#transferModal').fadeIn();
        });
    }

    // Call the function to fetch collections
    fetchUserCollections();

    // Close the modal when the close button is clicked
    $('.close-button').on('click', function() {
        $('#transferModal').fadeOut();
    });

    // Close the modal when clicking outside of it
    $(window).on('click', function(event) {
        if (event.target === $('#transferModal')[0]) {
            $('#transferModal').fadeOut();
        }
    });
});
</script>
<!-- end: get collections -->





<!-- modal; -->
<script>
$(document).ready(function() {
    $('#transferForm').on('submit', function(e) {
        e.preventDefault(); 
        $('#cover-spin').show(0);

        // Hide the "Mint New Token" button and show the "Please wait" button
        $('#submitTransferButton').hide();
        $('#pleaseWaitButton').show();

        const formData = {
            ownTokenId: $('#tokenId').val(),
            ownCollectionId: $('#collectionId').val(),
            desiredTokenId: $('#desiredTokenId').val(),
            desiredCollectionId: $('#desiredCollectionId').val(),
            recipientAddress: $('#recipientAddress').val(),
        };

        const token = localStorage.getItem('token');

        $.ajax({
            url: '/api/initiateCouponSwap', 
            type: 'POST',
            data: JSON.stringify(formData),
            contentType: 'application/json',
            headers: {
                Authorization: `Bearer ${token}`,
            },
            success: function(response) {
                $('#cover-spin').hide(0);
                
                if (response.success) {
                    Swal.fire({
                        position: "center",
                        icon: "success",
                        title: response.message || "Swap Initiated Successfully!",
                        showConfirmButton: false,
                        timer: 1500,
                    });
                    $('#transferModal').modal('hide');  // Close the modal
                } else {
                    Swal.fire({
                        position: "center",
                        icon: "error",
                        title: "An error occurred!",
                        showConfirmButton: false,
                        timer: 1500,
                    });
                    console.error('Failed to initiate swap:', response.message);
                }

                // After success or failure, restore the original buttons and reload the page after a delay
                setTimeout(function() {
                    $('#submitTransferButton').show();  // Show the transfer button again
                    $('#pleaseWaitButton').hide(); // Hide the "Please wait" button
                    location.reload();
                }, 1500);
            },
            error: function(xhr) {
                $('#cover-spin').hide(0);
                alert('An error occurred: ' + xhr.responseText);

                // In case of error, show the "transfer New Token" button and hide the "Please wait" button
                $('#submitTransferButton').show();
                $('#pleaseWaitButton').hide();
            }
        });
    });
});
</script>

<!-- redeem coupon -->
 <!-- <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> -->

<script>
    $(document).on('click', '.redeem-coupon', function(e) {
        e.preventDefault();

        const tokenId = $(this).data('token-id');
        const collectionId = $(this).data('collection-id');
        const $button = $(this);  // Store reference to the clicked button
        const token = localStorage.getItem("token");

        Swal.fire({
            title: 'Are you sure?',
            text: "You are about to redeem this token.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, redeem it!',
            cancelButtonText: 'Cancel'
        })
        .then((result) => {
            if (result.isConfirmed) {
                // Change the button text to "Please wait..." and disable it
                $button.html('Please wait...').attr('disabled', true);
                $.ajax({
                    url: '/api/redeemCoupon',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        tokenId: tokenId,
                        collectionId: collectionId
                    }),
                    headers: {
                        Authorization: `Bearer ${token}`,
                    },
                    success: function(response) {
                        if (response.success) {
                            Swal.fire(
                                'Success!',
                                response.message,
                                'success'
                            );
                            // Optionally, refresh the page or update the UI
                            setTimeout(function() {
                                location.reload();
                            }, 2000); 
                        } else {
                            // Handle specific error messages
                            if (response.message === "Redeem request already made for this coupon.") {
                                Swal.fire('Notice!', response.message, 'info');
                            } else {
                                Swal.fire('Error!', response.message, 'error');
                            }
                        }
                    },
                    error: function(xhr, status, error) {
                        // console.log(xhr.responseText)
                        Swal.fire(
                            'Error!',
                            xhr.responseText,
                            'error'
                        );
                    },
                    complete: function() {
                        $button.html('Redeem').attr('disabled', false);
                    }
                });
            }
        });
    });
</script>

<script>
$(document).ready(function() {
    $('#completeSwapForm').on('submit', function(e) {
        e.preventDefault();

        const swapOfferId = $('#swapOfferId').val();
        
        if (!swapOfferId) {
            Swal.fire('Error!', 'Swap Offer ID is required.', 'error');
            return;
        }

        Swal.fire({
            title: 'Are you sure?',
            text: 'Are you sure you want to proceed with this swap?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, proceed!',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                $('#submitAcceptButton').hide();      
                $('#kindlyWaitButton').show();        

                $.ajax({
                    url: '/api/acceptCouponSwap',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ swapOfferId: swapOfferId }),
                    headers: {
                        Authorization: `Bearer ${localStorage.getItem("token")}`
                    },
                    success: function(response) {
                        if (response.success) {
                            Swal.fire('Success!', response.message, 'success');

                            setTimeout(function() {
                                location.reload();
                            }, 2000);
                        } else {
                            Swal.fire('Error!', response.message, 'error');
                        }

                        // Re-enable the buttons
                        $('#kindlyWaitButton').hide();
                        $('#submitAcceptButton').show();
                    },
                    error: function(xhr, status, error) {
                        Swal.fire('Error!', 'An error occurred while processing the swap. Please try again.', 'error');
                        
                        // Re-enable the buttons
                        $('#kindlyWaitButton').hide();
                        $('#submitAcceptButton').show();
                    }
                });
            }
        });
    });
});
</script>


<%- include('../../partials/admin/footer') %>








